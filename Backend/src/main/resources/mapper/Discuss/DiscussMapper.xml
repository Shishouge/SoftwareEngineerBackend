<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.backend.DAO.Discuss.DiscussMapper">

    <resultMap id="BaseResultMap" type="com.example.backend.Entity.Discuss.QuestionWithFollowNumAndLikeNum">
        <result column="ID" jdbcType="INTEGER" property="id" />
        <result column="TITLE" jdbcType="VARCHAR" property="title" />
        <result column="CONTENT" jdbcType="VARCHAR" property="description" />
        <result column="FOLLOW_NUM" jdbcType="INTEGER" property="followNum" />
        <result column="ANSWER_NUM" jdbcType="INTEGER" property="answerNum"/>
    </resultMap>

    <select id="getQuestionWithFollowNumAndLikeNum" resultType="com.example.backend.Entity.Discuss.QuestionWithFollowNumAndLikeNum">
        select ID,TITLE,CONTENT,FOLLOW_NUM,ANSWER_NUM
        from question
    </select>

    <select id="checkFocusQuestion" resultType="com.example.backend.Entity.Discuss.QuestionWithFollowNumAndLikeNum">
        select ID,TITLE,CONTENT,FOLLOW_NUM,ANSWER_NUM
        from question,focus_question
        where question.ID = focus_question.QUESTION_ID and focus_question.INDIVIDUAL_USER_ID = #{userId} and question.ID= #{questionId}
    </select>



    <insert id="addFocusQuestion">
        insert into focus_question (INDIVIDUAL_USER_ID, QUESTION_ID)
        values (#{userId},#{questionId});
    </insert>

    <delete id="deleteFocusQuestion">
        delete from focus_question
        where INDIVIDUAL_USER_ID = #{userId} and QUESTION_ID = #{questionId}
    </delete>



    <resultMap id="MapQuestionWithFollowNumAndLikeNumAndAvatar" type="com.example.backend.Entity.Discuss.QuestionWithFollowNumAndLikeNumAndAvatar">
        <result column="ID" jdbcType="INTEGER" property="id" />
        <result column="TITLE" jdbcType="VARCHAR" property="title" />
        <result column="CONTENT" jdbcType="VARCHAR" property="description" />
        <result column="FOLLOW_NUM" jdbcType="INTEGER" property="followNum" />
        <result column="ANSWER_NUM" jdbcType="INTEGER" property="answerNum"/>
        <result column="AVATAR" jdbcType="VARCHAR" property="avatar"/>
    </resultMap>

    <select id="getQuestionWithFollowNumAndLikeNumAndAvatar" resultMap="MapQuestionWithFollowNumAndLikeNumAndAvatar">
        select ID,TITLE,CONTENT,FOLLOW_NUM,ANSWER_NUM,AVATAR
        from question
        where AVATAR != 0
    </select>

    <resultMap id="MapAnswerWithUserInfo" type="com.example.backend.Entity.Discuss.AnswerWithUserInfo">
        <result column="ANSWER_ID" jdbcType="INTEGER" property="id" />
        <result column="CONTENT" jdbcType="VARCHAR" property="content" />
        <result column="LIKE_NUM" jdbcType="INTEGER" property="approveNum" />
        <result column="DISLIKE_NUM" jdbcType="INTEGER" property="disapproveNum"/>
        <association property="userInfo" javaType="UserInfo">
        <!-- id:声明主键，表示user_id是关联查询对象的唯一标识-->
<!--        <id property="id" column="ID" />-->
        <result property="name" column="USER_NAME" />
        <result property="avatar" column="AVATOR" />
        </association>
    </resultMap>

    <select id="getAllAnswerByQuestionId" resultMap="MapAnswerWithUserInfo">
        select answer.ID as ANSWER_ID , answer.CONTENT,answer.LiKE_NUM,answer.DISLIKE_NUM,individual_user.USER_NAME,individual_user.AVATOR
        from answer ,individual_user
        where answer.INDIVIDUAL_USER_ID = individual_user.ID and answer.QUESTION_ID = #{questionId}
    </select>


    <resultMap id="MapComment" type="com.example.backend.Entity.Discuss.Comment">
        <result column="CONTENT" jdbcType="VARCHAR" property="content" />
        <association property="info" javaType="Info">
            <result property="id" column="ID" />
            <result property="name" column="USER_NAME" />
            <result property="pic" column="AVATOR" />
            <result property="intro" column="INTRODUCTION" />
        </association>
    </resultMap>

    <select id="getAllCommentByAnswerId" resultMap="MapComment">
        select remark_answer.CONTENT,individual_user.ID,individual_user.USER_NAME,individual_user.AVATOR,individual_user.INTRODUCTION
        from  individual_user,remark_answer
        where remark_answer.ANSWER_ID = #{answerId} and remark_answer.INDIVIDUAL_USER_ID =individual_user.ID
    </select>


    <resultMap id="MapAnswerWithInfoAndComment" type="com.example.backend.Entity.Discuss.AnswerWithInfoAndComment">
        <result column="ANSWER_CONTENT" jdbcType="VARCHAR" property="answer" />
        <result column="QUESTION_TITLE" jdbcType="VARCHAR" property="question" />
        <result column="TIME" jdbcType="DATE" property="time" />
        <association property="info" javaType="Info">
            <result property="id" column="ID" />
            <result property="name" column="USER_NAME" />
            <result property="pic" column="AVATOR" />
            <result property="intro" column="INTRODUCTION" />
        </association>
    </resultMap>

    <select id="getQuestionByQuestionIdAndAnswerId" resultMap="MapAnswerWithInfoAndComment">
        select answer.CONTENT AS ANSWER_CONTENT,question.TITLE AS QUESTION_TITLE,answer.TIME,individual_user.ID,individual_user.USER_NAME,individual_user.AVATOR,individual_user.INTRODUCTION
        from  question,answer,individual_user
        where answer.ID = #{answerId} and question.ID = #{questionId} and answer.QUESTION_ID = question.ID
          and individual_user.ID = answer.INDIVIDUAL_USER_ID
    </select>

    <select id="getQuestionById" resultType="com.example.backend.Entity.Discuss.Question">
        select ID ,TITLE as title,CONTENT as content,INDIVIDUAL_USER_ID as IndividualUserId
        from question
        where ID = #{questionId}
    </select>

    <insert id="addQuestion">
        insert into question (TITLE,CONTENT,INDIVIDUAL_USER_ID)
        values (#{title},#{content},#{userId});
    </insert>

    <delete id="deleteQuestion">
        delete from question
        where ID = #{questionId}
    </delete>

    <update id="updateQuestion">
        update question
        set TITLE= #{title},CONTENT= #{content}
        where ID= #{questionId}
    </update>

    <insert id="addAnswer">
        insert into answer (INDIVIDUAL_USER_ID,QUESTION_ID,CONTENT,TIME)
        values (#{userId},#{questionId},#{content},#{time});
    </insert>

    <delete id="deleteAnswer">
       delete from answer
       where  ID = #{answerId}
    </delete>

    <update id="updateAnswer">
        update answer
        set CONTENT = #{content},TIME = #{time}
        where ID = #{answerId}
    </update>

    <insert id="addComment">
        insert into remark_answer(INDIVIDUAL_USER_ID,ANSWER_ID,CONTENT)
        values (#{userId},#{answerId},#{content})
    </insert>

    <delete id="deleteComment">
        delete  from remark_answer
        where INDIVIDUAL_USER_ID = #{userId} and ANSWER_ID = #{answerId}
    </delete>

    <update id="updateComment">
        update remark_answer
        set CONTENT = #{content}
        where INDIVIDUAL_USER_ID = #{userId} and ANSWER_ID = #{answerId}
    </update>

    <insert id="giveLikeOrDislike">
        insert into review_answer(ANSWER_ID,REVIEWER_ID,STATE)
        values (#{answerId},#{userId},#{state})
    </insert>

    <delete id="deleteLikeOrDislike">
        delete from review_answer
        where ANSWER_ID = #{answerId} and REVIEWER_ID = #{userId}
    </delete>
</mapper>